import * as dotenv from "dotenv";
// ≈Åadujemy zmienne ≈õrodowiskowe z .env.local
dotenv.config({ path: ".env.local" });

import { authService } from "../backend/services/authService";
import { mongodbService } from "../backend/services/mongodbService";
import { dbName } from "../backend/utils/mongodb";

async function testAuth() {
  console.log("üß™ Rozpoczynam test systemu autoryzacji");

  try {
    const testEmail = `test${Date.now()}@example.com`;
    const testPassword = "Test123!";

    // 1. Test rejestracji
    console.log(`\nüìù Rejestracja u≈ºytkownika z email: ${testEmail}`);
    const newUser = await authService.register(
      testEmail,
      testPassword,
      "partner"
    );
    console.log("‚úÖ U≈ºytkownik zarejestrowany:", {
      id: newUser.id,
      email: newUser.email,
      role: newUser.role,
      verified: newUser.verified,
    });

    // 2. Test logowania
    console.log("\nüîë Pr√≥ba logowania");
    const loginResult = await authService.login(testEmail, testPassword);
    console.log("‚úÖ U≈ºytkownik zalogowany:", {
      id: loginResult.user.id,
      email: loginResult.user.email,
      role: loginResult.user.role,
    });
    console.log("üîí Token:", loginResult.token);

    // 3. Sprawdzenie czy dane sƒÖ w bazie
    console.log("\nüîç Sprawdzanie bazy danych");
    const usersCollection = await mongodbService.getCollection(dbName, "users");
    const count = await usersCollection.countDocuments();
    console.log(`üìä Liczba u≈ºytkownik√≥w w bazie: ${count}`);

    // 4. Pr√≥ba logowania z b≈Çƒôdnym has≈Çem
    console.log("\n‚ùå Pr√≥ba logowania z b≈Çƒôdnym has≈Çem");
    try {
      await authService.login(testEmail, "WrongPassword123!");
      console.log("‚ùå Test nie powi√≥d≈Ç siƒô - zalogowano z b≈Çƒôdnym has≈Çem!");
    } catch (error) {
      console.log("‚úÖ Poprawnie odrzucono nieprawid≈Çowe dane logowania");
    }

    // 5. Wy≈õwietlenie wszystkich u≈ºytkownik√≥w
    console.log("\nüìã Lista u≈ºytkownik√≥w w bazie:");
    const users = await mongodbService.findDocuments(dbName, "users");
    users.forEach((user, index) => {
      console.log(`\n--- U≈ºytkownik ${index + 1} ---`);
      // Nie pokazujemy has≈Ça
      const { passwordHash, ...safeUser } = user;
      console.log(safeUser);
    });
  } catch (error) {
    console.error("‚ùå B≈ÇƒÖd podczas testu:", error);
  } finally {
    console.log("\n‚úÖ Test zako≈Ñczony");
    process.exit(0);
  }
}

// Uruchom test
testAuth();
